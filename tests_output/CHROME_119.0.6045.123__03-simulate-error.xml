<?xml version="1.0" encoding="UTF-8" ?>
<testsuites errors="2"
            failures="0"
            tests="1">

  <testsuite name="03-simulate-error"
    errors="2" failures="0" hostname="" id="" package="03-simulate-error" skipped="0"
    tests="1" time="2.438" timestamp="">
  
    <testcase name="Demo test ecosia.org" classname="03-simulate-error" time="0.09100" assertions="2">

    

    
    <error type="error"><![CDATA[
    Error: Invalid Chai property: eventually
    at Object.proxyGetter [as get] (/Users/davidko/Work/nightwatch-sandbox/node_modules/@nightwatch/chai/lib/chai/utils/proxify.js:90:17)
    at DescribeInstance.&lt;anonymous&gt; (/Users/davidko/Work/nightwatch-sandbox/dist/tests/03-simulate-error.js:17:37)
    ]]></error>
    
    </testcase>
  

  
    <system-err>
       Error
   A simulated error occurred

    Error location:
    /Users/davidko/Work/nightwatch-sandbox/dist/commands/simulateError.js:
    –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
     3 | module.exports = class SimulateError {
     4 |     async command() {
     5 |         const error = new Error(&#39;A simulated error occurred&#39;); 
     6 |         console.error(&#39;A simulated error occurred&#39;, error);
     7 |         return Promise.reject(error);
    –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––

 Error
   Invalid Chai property: eventually

    Error location:
    /Users/davidko/Work/nightwatch-sandbox/dist/tests/03-simulate-error.js:
    ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
     15 |     await browser.waitForElementVisible(&#39;body&#39;);
     16 |     expect(await browser.simulateError());
     17 |     expect(browser.simulateError).to.eventually.be.rejectedWith(Error, &#39;A simulated error occurred&#39;); 
     18 |     await browser.assert.titleContains(&#39;Ecosia&#39;);
     19 |   });
    ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––

    </system-err>
  

    

  
  </testsuite>
</testsuites>
